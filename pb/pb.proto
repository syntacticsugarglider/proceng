syntax = "proto3";
package pb;
message Material {
  string color = 5;
  string emissive = 6;
  float roughness = 7;
  float metalness = 8;
  float scale = 9;
  float dashSize = 11;
  float gapSize = 12;
  uint64 textureID = 1;
  enum Type {
    LAMBERT = 0;
    BASIC = 1;
    PHONG = 2;
    STANDARD = 3;
    LINE = 4;
    DASHED_LINE = 5;
  }
  enum Side {
    FRONT_SIDE = 0;
    BACK_SIDE = 1;
    DOUBLE_SIDE = 2;
  }
  Type type = 2;
  bool wireframe = 3;
  bool flatShaded = 10;
  Side side = 4;
}
message Body {
  repeated double vertices = 1;
  uint64 material = 2;
  enum Type {
    MESH = 0;
    BOX = 1;
    SPHERE = 2;
  }
  message Face {
    uint64 a = 1;
    uint64 b = 2;
    uint64 c = 3;
    repeated double uvs = 4;
  }
  Type type = 3;
  RelativeLocation offset = 4;
  Rotation rotation = 5;
  repeated Face faces = 6;
  bool flatNormals = 7;
}

message Texture {
  bytes data = 1;
  uint64 parts = 2;
  uint64 part = 3;
}

message Request {
  enum Type {
    TEXTURE = 0;
    AUDIO = 1;
    MATERIAL = 2;
  }
  uint64 id = 2;
  Type type = 1;
}

message Response {
  enum Type {
    TEXTURE = 0;
    AUDIO = 1;
    CHUNK = 2;
    MATERIAL = 3;
  }
  Type type = 1;
  uint64 id = 2;
  Texture texture = 3;
  Chunk chunk = 4;
  Material material = 5;
}

message Light {
  enum Type {
    POINT_LIGHT = 0;
    RECT_AREA_LIGHT = 1;
    SPOT_LIGHT = 2;
    AMBIENT_LIGHT = 3;
    DIRECTIONAL_LIGHT = 4;
    HEMISPHERE_LIGHT = 5;
  }
  Type type = 1;
  string color = 2;
  float intensity = 3;
  RelativeLocation position = 4;
  Rotation rotation = 5;
  float distance = 6;
  float decay = 7;
  float angle = 8;
  float penumbra = 9;
  string secondaryColor = 10;
  uint32 width = 11;
  uint32 height = 12;
}

message Entity {
  RelativeLocation location = 1;
  Rotation rotation = 2;
  Velocity velocity = 3;
  Velocity rotationalVelocity = 4;
  repeated Body bodies = 5;
  repeated Light lights = 6;
}

message Chunk {
  AbsoluteLocation location = 1;
  repeated Entity entities = 2;
}

message RelativeLocation {
  double x = 1;
  double y = 2;
  double z = 3;
}

message Rotation {
  float x = 1;
  float y = 2;
  float z = 3;
  float w = 4;
}

message Velocity {
  float x = 1;
  float y = 2;
  float z = 3;
}

message AbsoluteLocation {
  sint64 x = 1;
  sint64 y = 2;
  sint64 z = 3;
}

message RelativeAbsoluteLocation {
  AbsoluteLocation absolute = 1;
  RelativeLocation relative = 2;
}

message Update {
  enum Type {
    LOC = 0;
  }
  Type type = 1;
  RelativeLocation position = 2;
  Rotation rotation = 3;
  Velocity velocity = 4;
  Velocity rotationalVelocity = 5;
}